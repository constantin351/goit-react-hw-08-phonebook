{"version":3,"file":"static/js/422.8f6fe9c9.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","components/Form/Form.js","components/Loader/Loader.js","components/Filter/Filter.js","pages/Contacts.js"],"sourcesContent":["export const getContacts = state => state.contacts.contacts;\n\nexport const getIsLoading = state => state.contacts.isLoading;\n\nexport const getError = state => state.contacts.error;\n\nexport const getFilter = state => state.filter;","import PropTypes from \"prop-types\";\nimport { useDispatch } from \"react-redux\";\nimport { deleteContact } from \"redux/contacts/operations\";\nimport styled from '@emotion/styled';\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  font-size: 16px;\n  font-weight: 600;\n  justify-content: space-between;\n  width: 340px;\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n  border-bottom: 1px dashed black;\n  padding: 10px 0;\n`;\n\nconst Name = styled.p`\n  margin-right: 10px;\n`\n\nconst Number = styled.p`\n  margin-right: 10px;\n`\n\nconst DeleteBtn = styled.button`\n  width: 100px;\n  height: 32px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 16px;\n  font-weight: 600;\n  border-radius: 8px;\n  color: #ffffff;\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n  border: none;\n  background: #1976d2;\n  cursor: pointer;\n  /* box-shadow: 1px 1px 6px 2px rgba(12, 0, 0, 0.37); */\n\n  &:hover,\n  :focus {\n    background-color: orangered;\n    box-shadow: 1px 1px 6px 2px rgba(12, 0, 0, 0.37);\n  }\n`;\n\nconst ContactListItem = ({ contact }) => { \n  const dispatch = useDispatch();\n  \n  const handleDelete = () => dispatch(deleteContact(contact.id));\n\n  return (\n      <Wrapper>\n          <Name>{contact.name}: </Name>\n          <Number>{contact.number}</Number>\n          <DeleteBtn\n            //   className={css.item__btn}\n              type=\"button\"\n              onClick={handleDelete}\n          >\n              Delete\n          </DeleteBtn>\n      </Wrapper>\n  )\n};\n\n\nContactListItem.propTypes = {\n    contact: PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            name: PropTypes.string.isRequired,\n            number: PropTypes.string.isRequired,\n          }),\n};\n\nexport default ContactListItem;\n\n","import { useSelector } from \"react-redux\";\nimport { getContacts, getFilter } from \"redux/contacts/selectors\"; \nimport ContactListItem from \"components/ContactListItem\";\n\nconst filteredContactsArray = (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\nconst ContactList = () => { \n    const contacts = useSelector(getContacts);\n    const filter = useSelector(getFilter);\n    const filteredContacts = filteredContactsArray(contacts, filter);\n\n    return (\n        <ul>\n            {filteredContacts.map(contact => (\n                <li key={contact.id}>\n                    <ContactListItem contact={contact} />\n                </li>\n            ))               \n            }\n        </ul>\n    )\n};\n\nexport default ContactList;","import { useDispatch, useSelector } from \"react-redux\";\nimport { addContact } from \"redux/contacts/operations\";\nimport { getContacts } from \"redux/contacts/selectors\";\nimport styled from '@emotion/styled';\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  margin: 20px 0;\n  margin-top: 96px;\n`;\n\nconst Title = styled.h2`\n  font-size: 28px;\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n  font-weight: 700;\n  text-align: center;\n  margin-bottom: 14px;\n`;\n\nconst ContactAddForm = styled.form`\n  width: 340px;\n`;\n\nconst Label = styled.label`\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 16px;\n  font-weight: 700;\n`;\n\nconst Input = styled.input`\n  margin-top: 8px;\n  height: 30px;\n  padding: 6px 8px;\n  border-radius: 8px;\n  outline: none;\n  border: 1px solid black;\n  font-size: 16px;\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n  font-weight: 500;\n\n  &:hover,\n  :focus,\n  :active {\n    border: 1px solid orangered;\n    background-color: #f3f3f3;\n    box-shadow: 1px 1px 6px 2px rgba(12, 0, 0, 0.37);\n  }\n`;\n\nconst Button = styled.button`\n  width: 100%;\n  padding: 10px 0;\n  font-size: 16px;\n  font-weight: 800;\n  border-radius: 8px;\n  color: #ffffff;\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n  border: none;\n  background: #1976d2;\n  cursor: pointer;\n  /* box-shadow: 1px 1px 6px 2px rgba(12, 0, 0, 0.37); */\n\n  &:hover,\n  :focus {\n    background-color: green;\n    box-shadow: 1px 1px 6px 2px rgba(12, 0, 0, 0.37);\n  }\n`;\n\nconst Form = () => { \n    const dispatch = useDispatch();\n    const contacts = useSelector(getContacts);\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        const form = event.target;\n        const name = form.elements.name.value;\n        const number = form.elements.number.value;\n        \n        contacts.some(contact => contact.name === name)\n            ? alert(`${name} is already in the phonebook`)\n            : dispatch(addContact({name, number}));\n        \n        form.reset();\n    };\n\n     return (\n        <Wrapper>\n            <Title>Add your contacts here</Title>\n            <ContactAddForm onSubmit={handleSubmit}>\n                <Label>\n                    Name\n                    <Input\n                        // value={name}\n                        type=\"text\"\n                        name=\"name\"\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                        required\n                    />\n                </Label>\n\n                <Label>\n                    Number\n                    <Input\n                        // value={number}\n                        type=\"tel\"\n                        name=\"number\"\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                        required\n                        />\n                </Label>\n\n                <Button type=\"submit\" >Add contact</Button>\n            </ContactAddForm>\n        </Wrapper>\n        )\n};\n\nexport default Form;","import { RotatingLines } from 'react-loader-spinner';\nimport styled from '@emotion/styled';\n\nconst LoaderWrapper = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;\n\nfunction Loader() {\n    return (\n        <LoaderWrapper>\n            <RotatingLines\n              strokeColor=\"grey\"\n              strokeWidth=\"5\"\n              animationDuration=\"0.75\"\n              width=\"96\"\n              visible={true}\n            />\n        </LoaderWrapper>\n    )\n};\n\nexport default Loader;","import { useDispatch } from \"react-redux\";\nimport { setFilter } from \"redux/contacts/filterSlice\";\nimport styled from '@emotion/styled';\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 12px;\n  width: 340px;\n`;\n\nconst Label = styled.label`\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n  display: flex;\n  flex-direction: column;\n  font-weight: 700;\n`;\n\nconst Input = styled.input`\n  margin-top: 8px;\n  height: 30px;\n  padding: 6px 8px;\n  border-radius: 8px;\n  outline: none;\n  border: 1px solid black;\n  font-size: 16px;\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n  font-weight: 500;\n  width: 330px;\n\n  &:hover, :focus, :active {\n    border: 1px solid orangered;\n    background-color: #F3F3F3;\n    box-shadow: 1px 1px 6px 2px rgba(12, 0, 0, 0.37);\n  }\n`;\n\n\nconst Filter = () => { \n    const dispatch = useDispatch();\n\n    const onFilterInputChange = (event) => {\n        dispatch(setFilter(event.currentTarget.value))\n    };\n\n    return (\n        <Wrapper>\n            <Label>\n                Find contacts with name\n                <Input\n                    // value={filter}\n                    type=\"text\"\n                    name=\"filter\"\n                    onChange={onFilterInputChange}\n                />\n            </Label>\n        </Wrapper>\n    )\n};\n\nexport default Filter;","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { getError, getIsLoading } from 'redux/contacts/selectors';\nimport styled from '@emotion/styled';\n\nimport ContactList from 'components/ContactList/ContactList';\nimport Form from 'components/Form/Form';\nimport Loader from 'components/Loader/Loader';\nimport Filter from 'components/Filter/Filter';\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Title = styled.h2`\n    font-size: 26px;\n    font-family: 'Segoe UI',Tahoma,Geneva,Verdana,sans-serif;\n    font-weight: 700;\n    text-align: center;\n`;\n\nexport default function Contacts() {\n    const dispatch = useDispatch();\n    const isLoading = useSelector(getIsLoading);\n    const error = useSelector(getError);\n\n    useEffect(() => {\n        dispatch(fetchContacts());\n    }, [dispatch]);\n\n    return (\n        <Wrapper>\n            <Helmet>\n                <title>Your Phonebook</title>\n            </Helmet>\n            \n            <Form/>\n\n            <Title>Contacts:</Title>\n\n            <Filter />\n\n            <ContactList />\n\n            {isLoading && !error && <Loader />} \n        </Wrapper>\n    );\n};"],"names":["getContacts","state","contacts","getIsLoading","isLoading","getError","error","getFilter","filter","Wrapper","styled","_templateObject","_taggedTemplateLiteral","Name","_templateObject2","Number","_templateObject3","DeleteBtn","_templateObject4","_ref","contact","dispatch","useDispatch","_jsxs","children","name","_jsx","number","type","onClick","deleteContact","id","filteredContacts","toLowerCase","includes","filteredContactsArray","useSelector","map","ContactListItem","Title","ContactAddForm","Label","Input","_templateObject5","Button","_templateObject6","onSubmit","event","preventDefault","form","target","elements","value","some","alert","concat","addContact","reset","pattern","title","required","LoaderWrapper","RotatingLines","strokeColor","strokeWidth","animationDuration","width","visible","onChange","setFilter","currentTarget","Contacts","useEffect","fetchContacts","Helmet","Form","Filter","ContactList","Loader"],"sourceRoot":""}